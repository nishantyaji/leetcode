# Problem 2116

class CheckIfParenthesesStringCanBeValid:

    def canBeValid(self, s: str, locked: str) -> bool:
        if len(s) % 2 == 1:
            return False
        opc, clc, n = 0, 0, len(s)
        for i, c in enumerate(locked):
            if c == "1":
                if s[i] == "(":
                    opc += 1
                else:
                    clc += 1
                if opc > n // 2:
                    return False
                if clc > (i + 1) // 2:
                    return False
        s, opc, clc = s[::-1], 0, 0
        for i, c in enumerate(reversed(locked)):
            if c == "1":
                if s[i] == "(":
                    opc += 1
                else:
                    clc += 1
                if clc > n // 2:
                    return False
                if opc > (i + 1) // 2:
                    return False
        return True


if __name__ == '__main__':
    cc = CheckIfParenthesesStringCanBeValid()
    print(cc.canBeValid(
        "(()))()))(()((()()(((()))()()()()()())))()()(()())()(()((()()((()((((((()(()()(()()())(((((())((()))))()(((((((()()())()))())((((((()(())())()((())()()((())((((())(((())(())()()))(((()()())())))((()))))()()()((()))())(())(((()()((())(())(())())()((()))())(())()(()())((((()(((())((()()())(((()(((((()))()))))))(()((())())(())))))(())(((())()()(()))())())))(((())))()()))()())))))())()(()()))(())(()())))())()))((((())(()))()(((())())(()(()))()))((()(())()()))))())(()(((((()",
        "110001111001011100000100011110101000100110010010011001110010111111100111000100000000101111101001111111011101001110011001001100100001100000000010100010101101100000100001000110111000111110110010111011010010100011111101110011100010010001111001010001001000111101101111111011001000100111100110101000100011011001001100110011111111111100101000100111111100000100101101000101111101000011110001001011111010011010000100100000000011101011001110000110011000100001110101100101111111110100"))
    # False
    print(cc.canBeValid("())(()(()(())()())(())((())(()())((())))))(((((((())(()))))(",
                       "100011110110011011010111100111011101111110000101001101001111"))
    # False
    print(cc.canBeValid("))()))", "010100"))  # True
    print(cc.canBeValid("()()", "0000"))  # True
    print(cc.canBeValid(")", "0"))  # False
